version: '3'

services:
  backend:
   container_name: ft_transcendence_backend
   depends_on:
     - postgres
   build:
    context: ./backend
    dockerfile: src/Dockerfile
   ports: 
     - '5000:5000'
   volumes:
     - ./backend/src:/app/nestjs/src
     - ./volumes/backend-build:/usr/src/app/client
   networks:
     - ft_transcendence
   restart: always

  postgres:
   image: postgres:15.1
   container_name: ft_transcendence_postgres
   restart: on-failure
   networks:
     - ft_transcendence
   environment:
     POSTGRES_USER: ${POSTGRES_USER}
     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
     POSTGRES_DB: ${POSTGRES_DB}
   ports:
     - ${POSTGRES_HOST_PORT}:5432
   volumes:
     - /var/lib/postgresql/data

  adminer-docker:
   image: adminer:4.8.1
   container_name: ft_transcendence_adminer
   restart: on-failure
   depends_on:
     - postgres
   networks:
     - ft_transcendence
   ports:
     - 8080:8080 
   volumes:
     - /var/lib/adminer 

  frontend:
    container_name: ft_transcendence_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - ./volumes/frontend-build:/usr/src/app/dist
    networks:
      - ft_transcendence

networks:
  ft_transcendence:
    driver: bridge
