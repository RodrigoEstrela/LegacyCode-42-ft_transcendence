version: '3'

services:
  backend:
   container_name: ${BACKEND_CONTAINER}
   depends_on:
     - postgres
   build:
    context: ./backend
    dockerfile: src/Dockerfile
   ports: 
     - $BACKEND_PORT_LOCAL:$BACKEND_PORT_DOCKER
   volumes:
     - ./backend/src:/app/nestjs/src
     - ./volumes/backend-build:/usr/src/app/client
   networks:
     - ${NETWORK}
   restart: always
   env_file:
     - .env

  postgres:
   image: postgres:15.1
   container_name: ${POSTGRES_CONTAINER}
   restart: on-failure
   ports:
     - ${POSTGRES_PORT_LOCAL}:${POSTGRES_PORT_DOCKER}
   volumes:
     - /var/lib/postgresql/data
   networks:
     - ${NETWORK}
   env_file:
     - .env

  adminer-docker:
   image: adminer:4.8.1
   container_name: ${ADMINER_CONTAINER}
   restart: on-failure
   depends_on:
     - postgres
   ports:
     - ${ADMINER_PORT_LOCAL}:${ADMINER_PORT_DOCKER} 
   volumes:
     - /var/lib/adminer 
   networks:
     - ${NETWORK}

  # frontend:
  #   container_name: ${FRONTEND_CONTAINER}
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - ${FRONTEND_PORT_LOCAL}:${FRONTEND_PORT_DOCKER}
  #   volumes:
  #     - ./frontend:/app
  #     - ./volumes/frontend-build:/usr/src/app/dist
  #   networks:
  #     - ${NETWORK}
  #   restart: always
  #   env_file:
  #     - .env

networks:
  ft_transcendence:
    driver: bridge
